<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Курсовой">
    <!--Font family-->

    <Style TargetType="TextBlock" x:Key="TextBl">
        <Setter Property="FontFamily" Value="Calibri"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForeground}"/>
    </Style>

    <Style TargetType="TextBlock" x:Key="WorkText">
        <Setter Property="FontFamily" Value="Calibri"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>

    <Style TargetType="TextBlock" x:Key="OtherTextBlock">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundTextBox}"/>
        <Setter Property="FontFamily" Value="Calibri"/>
    </Style>

    <Style TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource TextForeground}"/>
        <Setter Property="FontFamily" Value="Calibri"/>
    </Style>
    
    <Style TargetType="ListView">
        <Setter Property="Foreground" Value="{DynamicResource TextForeground}"/>
        <Setter Property="FontFamily" Value="Calibri"/>
    </Style>

    <Style TargetType="TextBlock" x:Key="StyleInfoPage">
        <Setter Property="FontSize" Value="30"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundTextBlock}"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>
    
    <!--Text box-->
    <Style TargetType="TextBox">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="Calibri"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundTextBox}"/>
        <Setter Property="Padding" Value="7"/>
        <Setter Property="Margin" Value="5,2"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid Background="{DynamicResource BackgroundTextBox}" >
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        <Separator Name="Underline1" Margin="0,3,0,0" VerticalAlignment="Bottom" Background="{DynamicResource LogoandButton}"/>
                        <Separator Name="Underline" Margin="0,3,0,0" VerticalAlignment="Bottom"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource IsFocusedText}"/>
                            <Setter Property="Visibility" TargetName="Underline" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="PasswordBox">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="Calibri"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundTextBox}"/>
        <Setter Property="Padding" Value="7"/>
        <Setter Property="Margin" Value="5,2"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Grid Background="{DynamicResource BackgroundTextBox}" >
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        <TextBlock Style="{DynamicResource OtherTextBlock}" Name="Placeholder" Text="{Binding Path=Tag, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Padding="5" Margin="5,2" FontSize="16"/>
                        <Separator Name="Underline1" Margin="0,3,0,0" VerticalAlignment="Bottom" Background="{DynamicResource LogoandButton}"/>
                        <Separator Name="Underline" Margin="0,3,0,0" VerticalAlignment="Bottom"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource IsFocusedText}"/>
                            <Setter Property="Visibility" TargetName="Underline" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="MainButton">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="15,15,15,15" BorderThickness="1" Background="{DynamicResource LogoandButton}"  >
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Foreground" Value="{DynamicResource MainColor}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="FontSize" Value="20" />
                            <Setter Property="BorderThickness" Value="2"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="CheckBox">
        <Setter Property="FontFamily" Value="Calibri"/>
        <Setter Property="IsEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Border CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"  Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            <Border VerticalAlignment="Center" HorizontalAlignment="Right" Padding="2,1">
                                <Path Name="path" Stroke="White" StrokeThickness="5" StrokeStartLineCap="Round"  StrokeEndLineCap="Round" StrokeLineJoin="Round" />
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="path" Property="Data" Value="M 0 5 L 3 10 10 0" />
                            <Setter TargetName="path" Property="Stroke" Value="green" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListBoxItem" x:Key="NoStyleBoxItem">
        <Setter Property="Button.Foreground" Value="{DynamicResource TextForeground}" />
        <Setter Property="Width" Value="185"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border>
                        <ContentPresenter Name="Content" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Button-->
    
    <Style TargetType="Button" x:Key="MenuButton">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundTextBlock}"/>
        <Setter Property="Width" Value="300"/>
        <Setter Property="Height" Value="80"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <ContentPresenter Name="Content" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        <Separator VerticalAlignment="Bottom" HorizontalAlignment="Center" Width="300" Margin="0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource LogoandButton}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="FontSize" Value="20" />
                            <Setter Property="FontWeight" Value="Bold"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="NoStyleButton">
        <Setter Property="Button.Foreground" Value="{DynamicResource TextForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{DynamicResource MainColor}">
                        <ContentPresenter Name="Content" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="FontSize" Value="20" />
                            <Setter Property="FontWeight" Value="Bold"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="NoStyleButtonWithoutWhite">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentPresenter Name="Content" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="FontSize" Value="20" />
                            <Setter Property="FontWeight" Value="Bold"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ComboBox-->
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="24" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="5" Background="#B2E8E8E8" BorderBrush="{DynamicResource MainColor}" BorderThickness="1" />
            <Path x:Name="Arrow" Grid.Column="1" Fill="{DynamicResource ForegroundTextBox}" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M -2 0 L 2 4 L 6 0 Z"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="BorderBrush" Value="Gray" />
                <Setter TargetName="Arrow" Property="Fill" Value="Gray" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style x:Key="{x:Type ComboBox}" TargetType="ComboBox">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="FontSize" Value="12"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Grid.Column="2"
                                      IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="6,3,23,3" VerticalAlignment="Center"
                                          HorizontalAlignment="Left" />
                        <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide" Margin="8">
                            <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" Background="#B2E8E8E8" CornerRadius="3" Margin="0,3,0,3" />
                                <ScrollViewer SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ComboBoxItem}" TargetType="ComboBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border Name="Border" Padding="7" BorderThickness="1" SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#FFD9D9D9"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>